import json
import datetime
from flask_mongoengine import MongoEngine

db = MongoEngine()

class Docker(db.Document):
    Platform = db.DictField(required=True)
    Version = db.StringField(required=True)
    ApiVersion = db.StringField(required=True)
    MinAPIVersion = db.StringField(required=True)
    GitCommit = db.StringField(required=True)
    GoVersion = db.StringField(required=True)
    Os = db.StringField(required=True)
    Arch = db.StringField(required=True)
    KernelVersion = db.StringField(required=True)
    BuildTime = db.StringField(required=True)
    Components = db.ListField(required=True)
    ID = db.StringField(required=True)
    Containers = db.IntField(required=True)
    ContainersRunning = db.IntField(required=True)
    ContainersPaused = db.IntField(required=True)
    ContainersStopped = db.IntField(required=True)
    Images = db.IntField(required=True)
    Driver = db.StringField(required=True)
    DriverStatus = db.ListField(required=True)
    Plugins = db.DictField(required=True)
    MemoryLimit = db.BooleanField(required=True)
    SwapLimit = db.BooleanField(required=True)
    KernelMemory = db.BooleanField(required=True)
    KernelMemoryTCP = db.BooleanField(required=True)
    CpuCfsPeriod = db.BooleanField(required=True)
    CpuCfsQuota = db.BooleanField(required=True)
    CPUShares = db.BooleanField(required=True)
    CPUSet = db.BooleanField(required=True)
    PidsLimit = db.BooleanField(required=True)
    IPv4Forwarding = db.BooleanField(required=True)
    BridgeNfIptables = db.BooleanField(required=True)
    BridgeNfIp6tables = db.BooleanField(required=True)
    Debug = db.BooleanField(required=True)
    NFd = db.IntField(required=True)
    OomKillDisable = db.BooleanField(required=True)
    NGoroutines = db.IntField(required=True)
    SystemTime = db.StringField(required=True)
    LoggingDriver = db.StringField(required=True)
    CgroupDriver = db.StringField(required=True)
    CgroupVersion = db.StringField(required=True)
    NEventsListener = db.IntField(required=True)
    OperatingSystem = db.StringField(required=True)
    OSVersion = db.StringField(required=True)
    OSType = db.StringField(required=True)
    Architecture = db.StringField(required=True)
    IndexServerAddress = db.StringField()
    RegistryConfig = db.DictField(required=True)
    NCPU = db.IntField(required=True)
    MemTotal = db.IntField(required=True)
    GenericResources = db.StringField()
    DockerRootDir = db.StringField()
    HttpProxy = db.StringField()
    HttpsProxy = db.StringField()
    NoProxy = db.StringField()
    Name = db.StringField()
    Labels = db.ListField()
    ExperimentalBuild = db.BooleanField(required=True)
    ServerVersion = db.StringField(required=True)
    Runtimes = db.DictField()
    DefaultRuntime = db.StringField(required=True)
    Swarm = db.DictField(required=True)
    LiveRestoreEnabled = db.BooleanField(required=True)
    Isolation = db.StringField()
    InitBinary = db.StringField(required=True)
    ContainerdCommit = db.DictField(required=True)
    RuncCommit = db.DictField(required=True)
    InitCommit = db.DictField(required=True)
    SecurityOptions = db.ListField(required=True)
    Warnings= db.ListField()

class DockerImage(db.Document):
    Containers = db.IntField(required=True)
    Created = db.IntField(required=True)
    Id = db.StringField(required=True)
    Labels = db.StringField()
    ParentId = db.StringField()
    RepoDigests = db.ListField()
    RepoTags = db.ListField()
    SharedSize = db.IntField(required=True)
    Size = db.IntField(required=True)
    VirtualSize = db.IntField(required=True)

class DockerContainer(db.Document):
    Id = db.StringField(required=True)
    Names = db.ListField(required=True)
    Image = db.StringField(required=True)
    ImageID = db.StringField(required=True)
    Command = db.StringField()
    Created = db.IntField(required=True)
    Ports = db.ListField()
    Labels = db.DictField()
    State = db.StringField(required=True)
    Status = db.StringField(required=True)
    HostConfig = db.DictField()
    NetworkSettings = db.DictField()
    Mounts = db.ListField()

class HttpRequestLog(db.Document):
    date = db.DateTimeField(default=datetime.datetime.utcnow)
    sensor_id = db.StringField(required=True)
    sensor_type = db.StringField(required=True)
    method = db.StringField(required=True)
    path = db.StringField(required=True)
    host = db.StringField(required=True)
    args = db.DictField()
    url = db.StringField(required=True)
    headers = db.DictField(required=True)
    data_json = db.DictField()
    data = db.StringField()
    source_ip = db.StringField(required=True)

